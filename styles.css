* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Pacifico', cursive;
    transition: all 0.3s ease;
}

:root {
    --primary-color: #FFD1DC;
    --secondary-color: #FFB6C1;
    --accent-color: #FF69B4;
    --text-color: #4A4A4A;
    --background: #FFF5F6;
    --card-bg: #FFFFFF;
    --shadow-color: rgba(255, 182, 193, 0.2);
}

.dark-mode {
    --primary-color: #663399;
    --secondary-color: #FF007F;
    --accent-color: #C0C0C0;
    --text-color: #FFFFFF;
    --background: #2A1B3D;
    --card-bg: #372549;
    --shadow-color: rgba(192, 192, 192, 0.1);
}

body {
    min-height: 100vh;
    background: var(--background);
    overflow-x: hidden;
    position: relative;
}

.theme-toggle {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1000;
    background: var(--card-bg);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    cursor: pointer;
    box-shadow: 0 2px 10px var(--shadow-color);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    color: var(--text-color);
    background-color: var(--accent-color);
    color: white;
    border: none; /* Bỏ viền mặc định nếu có */
    width: 45px;
    height: 45px;
    border-radius: 50%; /* Giữ nút hình tròn */
    transition: all 0.2s ease;  /* Thêm transition cho hiệu ứng mượt mà */
}
.theme-toggle:hover {
    background-color: #ff4da6;
    box-shadow: 0 0 10px rgba(255, 77, 166, 0.5);
    transform: scale(1.1);
}

.theme-toggle i {
    font-size: 1.4rem;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
}

.page {
    display: none;
    width: 100%;
    text-align: center;
    animation: fadeIn 0.5s ease;
    position: absolute; /* Đặt vị trí tuyệt đối cho các trang */
    opacity: 0;
    left: 0;
    transition: transform 0.5s ease-in-out; /* Thêm transition */
}

.page.active {
    opacity: 1; /* Hiển thị trang khi active */
}

.page.slide-in {
    transform: translateX(0); /* Vị trí cuối cùng */
}

.page.slide-out {
    transform: translateX(-100%); /* Vị trí khi trượt ra ngoài */
}

.active {
    display: block;
}

.card {
    background: var(--card-bg);
    padding: 40px;
    border-radius: 20px;
    box-shadow: 0 8px 32px var(--shadow-color);
    margin: 20px 0;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
}

h2 {
    color: var(--text-color);
    margin-bottom: 30px;
    font-size: 2rem;
    font-weight: 600;
}

.btn {
    padding: 12px 30px;
    border: none;
    border-radius: 25px;
    background: var(--primary-color);
    color: var(--text-color);
    font-size: 1.1rem;
    cursor: pointer;
    margin: 10px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 15px var(--shadow-color);
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 20px var(--shadow-color);
}

.date-time-picker {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin: 20px 0;
}

input[type="date"],
input[type="time"] {
    padding: 12px;
    border: 2px solid var(--secondary-color);
    border-radius: 10px;
    background: var(--card-bg);
    color: var(--text-color);
    font-size: 1rem;
    outline: none;
}

.food-grid,
.movie-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin: 30px 0;
}

.food-item,
.movie-item {
    position: relative;
    cursor: pointer;
    border-radius: 15px;
    overflow: hidden;
    transition: transform 0.3s ease;
}

.food-item img,
.movie-item img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 15px;
}

.food-item.selected,
.movie-item.selected {
    transform: scale(1.05);
    box-shadow: 0 8px 25px var(--shadow-color);
}

.item-label {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 10px;
    text-align: center;
}

.slider-container {
    width: 100%;
    margin: 30px 0;
}

input[type="range"] {
    width: 100%;
    height: 10px;
    border-radius: 5px;
    background: var(--secondary-color);
    outline: none;
    -webkit-appearance: none;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    background: var(--accent-color);
    border-radius: 50%;
    cursor: pointer;
}

.final-details {
    margin: 20px 0;
    padding: 20px;
    background: var(--card-bg);
    border-radius: 15px;
    box-shadow: 0 4px 15px var(--shadow-color);
}

.final-details p {
    margin: 10px 0;
    color: var(--text-color);
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.floating-elements {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
}

.heart {
    position: absolute;
    width: 20px;
    height: 20px;
    background: var(--accent-color);
    opacity: 0.3;
    clip-path: path("M12 21.593c-5.63-5.539-11-10.297-11-14.402 0-3.791 3.068-5.191 5.281-5.191 1.312 0 4.151.501 5.719 4.457 1.59-3.968 4.464-4.447 5.726-4.447 2.54 0 5.274 1.621 5.274 5.181 0 4.069-5.136 8.625-11 14.402m5.726-20.583c-2.203 0-4.446 1.042-5.726 3.238-1.285-2.206-3.522-3.248-5.719-3.248-3.183 0-6.281 2.187-6.281 6.191 0 4.661 5.571 9.429 12 15.809 6.43-6.38 12-11.148 12-15.809 0-4.011-3.095-6.181-6.274-6.181");
    animation: float 20s linear infinite;
}

@keyframes float {
    0% {
        transform: translateY(100vh) scale(1);
        opacity: 0.3;
    }
    100% {
        transform: translateY(-100px) scale(0);
        opacity: 0;
    }
}

.progress-bar {
    position: fixed;
    top: 0;
    left: 0;
    height: 4px;
    background: var(--accent-color);
    transition: width 0.3s ease;
}

@media (max-width: 768px) {
    .card {
        padding: 20px;
    }

    h2 {
        font-size: 1.5rem;
    }

    .food-grid,
    .movie-grid {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }
}

span{
    font-weight: bold;
}
@media (max-width: 480px) {
    .container {
        padding: 10px;
    }

    h2 {
        font-size: 1.2rem;
    }

    .btn {
        padding: 8px 20px;
        font-size: 1rem;
    }

    .food-grid,
    .movie-grid {
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    }

    .food-item img,
    .movie-item img {
        height: 150px;
    }

    .theme-toggle {
        width: 35px;
        height: 35px;
        font-size: 1rem;
    }

    .card {
        padding: 15px;
    }

    .item-label {
        font-size: 0.9rem;
    }

    .slider-container {
        margin: 20px 0;
    }
}
/* Đảm bảo .date-time-picker được căn giữa */
.date-time-picker {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px; /* Tạo khoảng cách giữa các phần tử */
}

/* Đảm bảo các input trong date-time-picker co giãn phù hợp trên màn hình nhỏ */
.date-time-picker input {
    width: 100%;
    max-width: 250px; /* Giới hạn chiều rộng tối đa để không bị quá dài */
    padding: 8px;
    font-size: 1rem;
    border: 1px solid #f2b2b2;
    border-radius: 5px;
    text-align: center;
}

/* Căn giữa nút Submit */
.page#page3 .btn {
    display: block;
    margin: 15px auto;
}

#kittycat{
    width:200px;
    height:auto;
}
#noBtn:hover {
    animation: shake 0.5s;
  }
  
  @keyframes shake {
    0% { transform: translate(1px, 1px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-3px, 0px) rotate(1deg); }
    30% { transform: translate(3px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-3px, 1px) rotate(0deg); }
    70% { transform: translate(3px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
  }
